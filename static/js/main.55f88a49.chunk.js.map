{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","onPageChange","currentPage","pageAmount","Math","ceil","pageNumbers","i","push","className","cn","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setPerPage","lastItemIndex","firstItemIndex","currItems","slice","lastItemInfo","length","id","onChange","event","value","target","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA8B,SAAH,GAMtC,IAJK,IADLC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YAExBC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAc,GAEXC,EAAI,EAAGA,GAAKJ,EAAYI,GAAK,EACpCD,EAAYE,KAAKD,GAGnB,OACE,mCACE,qBAAIE,UAAU,aAAY,UACxB,oBACEA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBT,IAAqB,SAE5D,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,WACHX,EAAc,GAChBD,EAAaC,EAAc,IAE7B,SACH,WAKFI,EAAYQ,KAAI,SAAAC,GAAI,OACnB,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASb,IAAe,SAE7D,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMZ,EAAac,IAAM,SAEjCA,KATEA,MAcT,oBACEN,UAAWC,IAAG,YAAa,CAAEC,SAAUT,IAAgBC,IAAc,SAErE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,WACHX,GAAeH,GACjBE,EAAaC,EAAc,IAE7B,SACH,iBC/DX,IAAMe,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAAE,mBAA1CtB,EAAW,KAAEuB,EAAc,KAClC,EAA8BD,mBAAS,GAAE,mBAAlCxB,EAAO,KAAE0B,EAAU,KAEpBC,EAAgBzB,EAAcF,EAC9B4B,EAAiBD,EAAgB3B,EACjC6B,EAAYZ,EAAMa,MAAMF,EAAgBD,GAUxCI,EAAeJ,EAAgBV,EAAMe,OACvCL,EACAV,EAAMe,OAEV,OACE,sBAAKvB,UAAU,YAAW,UACxB,6BAAI,0BAEJ,mBAAGA,UAAU,OAAO,UAAQ,OAAM,wBACvBP,EAAW,mBAAW0B,EAAiB,EAAC,cAAMG,EAAY,eAAOd,EAAMe,OAAM,OAGxF,sBAAKvB,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,0BAAyB,SACtC,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,SA1BW,SAACC,GACpB,IAAQC,EAAUD,EAAME,OAAhBD,MAERV,GAAYU,GACZX,EAAe,IAuBPW,MAAOpC,EAAQ,UAEf,wBAAQoC,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,YAIvB,uBAAOE,QAAQ,kBAAkB7B,UAAU,qBAAoB,SAAC,sBAKlE,cAAC,EAAU,CACTV,MAAOkB,EAAMe,OACbhC,QAASA,EACTE,YAAaA,EACbD,aAtCW,SAACsC,GAAkB,OAAKd,EAAec,MAyCpD,6BACGV,EAAUf,KAAI,SAAA0B,GAAI,OACjB,oBAEE,UAAQ,OAAM,SAEbA,GAHIA,YEjEjBC,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,W","file":"static/js/main.55f88a49.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (pageNumber: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, onPageChange, currentPage,\n}) => {\n  const pageAmount = Math.ceil(total / perPage);\n  const pageNumbers = [];\n\n  for (let i = 1; i <= pageAmount; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item', { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(page => (\n          <li\n            key={page}\n            className={cn('page-item', { active: page === currentPage })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn('page-item', { disabled: currentPage === pageAmount })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"true\"\n            onClick={() => {\n              if (currentPage <= total) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const lastItemIndex = currentPage * perPage;\n  const firstItemIndex = lastItemIndex - perPage;\n  const currItems = items.slice(firstItemIndex, lastItemIndex);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setPerPage(+value);\n    setCurrentPage(1);\n  };\n\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n  const lastItemInfo = lastItemIndex < items.length\n    ? lastItemIndex\n    : items.length;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${lastItemInfo} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={paginate}\n      />\n\n      <ul>\n        {currItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}